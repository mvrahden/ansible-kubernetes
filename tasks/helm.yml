---
- name: helm | Generating RBAC Config For Tiller
  template:
    src: tiller-rbac-config.yaml.j2
    dest: /etc/kubernetes/tiller-rbac-config.yaml
  become: true
  register: _k8s_tiller_rbac_config_generated

- name: helm | Configuring RBAC For Tiller
  command: >
    kubectl --kubeconfig {{ k8s_admin_config }} \
    create -f /etc/kubernetes/tiller-rbac-config.yaml
  become: true
  when: >
        _k8s_tiller_rbac_config_generated['changed']

- name: helm | Checking If Helm Is Already Installed
  stat:
    path: "{{ k8s_helm_install_dir }}/helm"
  register: _k8s_helm_installed_check

- name: helm | Checking Installed Version Of Helm (If Installed)
  shell: >
         helm version | grep -o SemVer:.* | sed 's|:| |g' \
         | sed 's|,||g' | awk '{print $2}' | sed 's|\"||g' \
         | sed 's|v||g'
  register: _k8s_helm_installed_version
  changed_when: false
  when: >
        _k8s_helm_installed_check['stat']['exists']

- name: helm | Setting Installed Version Of Helm
  set_fact:
    _k8s_helm_version_installed: "{{ hostvars[inventory_hostname]['_k8s_helm_installed_version']['stdout_lines'][0] }}"
  when: >
        _k8s_helm_installed_check['stat']['exists']

- debug: var=_k8s_helm_version_installed
  when: >
        _k8s_helm_installed_check['stat']['exists']

- name: helm | Installing Helm
  unarchive:
    src: "{{ k8s_helm_url }}/{{ k8s_helm_package }}"
    dest: "{{ k8s_helm_install_dir }}"
    # creates: "{{ k8s_helm_install_dir }}/helm"
    remote_src: true
  register: _k8s_helm_installed
  become: true
  when: >
        (not _k8s_helm_installed_check['stat']['exists'] or
        (_k8s_helm_installed_check['stat']['exists'] and
        _k8s_helm_version_installed != k8s_helm_version))

- name: helm | Copying Helm
  copy:
    src: "{{ k8s_helm_install_dir }}/linux-{{ k8s_helm_architecture }}/helm"
    dest: "{{ k8s_helm_install_dir }}/"
    remote_src: true
  become: true
  when: >
        _k8s_helm_installed['changed']

- name: helm | Ensuring Helm Is Executable
  file:
    dest: "{{ k8s_helm_install_dir }}/helm"
    mode: u=rwx,g=rx,o=rx
  become: true

- name: helm | Cleaning Up Helm Install
  file:
    dest: "{{ k8s_helm_install_dir }}/linux-{{ k8s_helm_architecture }}"
    state: absent
  become: true

# kubectl create serviceaccount --namespace kube-system tiller
# kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
# kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'
# helm init --service-account tiller --upgrade

- name: helm | Initializing Helm
  command: helm init --service-account tiller
  args:
    creates: "/home/{{ item['user'] }}/.helm"
  become: true
  become_user: "{{ item['user'] }}"
  with_items: "{{ k8s_users }}"
